{"ast":null,"code":"import { Category } from './models/category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/category.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./components/edit-category/edit-category.component\";\nfunction AppComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_8_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const category_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editCategory(category_r1));\n    });\n    i0.ɵɵtext(5, \"D\\u00FCzenle\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(categoryService) {\n    this.categoryService = categoryService;\n    this.title = 'ProjectTask.UI';\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.categoryService.getCategory().subscribe(result => this.categories = result);\n  }\n  updateCategoryList(categories) {\n    this.categories = categories;\n  }\n  initNewCategory() {\n    this.categoryToEdit = new Category();\n  }\n  editCategory(category) {\n    this.categoryToEdit = category;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CategoryService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"category\", \"categoriesUpdated\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n        return ctx.initNewCategory();\n      });\n      i0.ɵɵtext(1, \"Yeni Kategori\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"th\");\n      i0.ɵɵtext(5, \"Kategori Ad\\u0131\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"th\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"tbody\");\n      i0.ɵɵtemplate(8, AppComponent_tr_8_Template, 6, 1, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"app-edit-category\", 2);\n      i0.ɵɵlistener(\"categoriesUpdated\", function AppComponent_Template_app_edit_category_categoriesUpdated_9_listener($event) {\n        return ctx.updateCategoryList($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"category\", ctx.categoryToEdit);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.EditCategoryComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,mBAAmB;;;;;;;;ICMxCC,0BAAwC;IAClCA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAACA,4BAAO;IAAAA,iBAAS;;;;IADzDA,eAAiB;IAAjBA,sCAAiB;;;ADC3B,OAAM,MAAOC,YAAY;EAKvBC,YAAqBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAJpC,UAAK,GAAG,gBAAgB;IACxB,eAAU,GAAe,EAAE;EAG4B;EAEvDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAkB,IAAM,IAAI,CAACC,UAAU,GAAGD,MAAO,CAAC;EAClG;EAEAE,kBAAkB,CAACD,UAAsB;IACvC,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEAE,eAAe;IACb,IAAI,CAACC,cAAc,GAAG,IAAIZ,QAAQ,EAAE;EACtC;EAEAa,YAAY,CAACC,QAAiB;IAC5B,IAAI,CAACF,cAAc,GAAGE,QAAQ;EAChC;;AArBWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBlB,iCAAoC;MAA5BA;QAAA,OAASmB,qBAAiB;MAAA,EAAC;MAACnB,6BAAa;MAAAA,iBAAS;MAC1DA,6BAAO;MAECA,iCAAY;MAAAA,iBAAK;MACrBA,qBAAS;MACXA,iBAAQ;MACRA,6BAAO;MACLA,2DAGK;MACPA,iBAAQ;MAGVA,4CAAgG;MAAjDA;QAAA,OAAqBmB,8BAA0B;MAAA,EAAC;MAACnB,iBAAoB;;;MAPvFA,eAAa;MAAbA,wCAAa;MAOvBA,eAA2B;MAA3BA,6CAA2B","names":["Category","i0","AppComponent","constructor","categoryService","ngOnInit","getCategory","subscribe","result","categories","updateCategoryList","initNewCategory","categoryToEdit","editCategory","category","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Haldun\\Desktop\\NidaYilmazturkProje\\ProjectTaskNG\\ProjectTask.UI\\src\\app\\app.component.ts","C:\\Users\\Haldun\\Desktop\\NidaYilmazturkProje\\ProjectTaskNG\\ProjectTask.UI\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Category } from './models/category';\nimport { CategoryService } from './services/category.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProjectTask.UI';\n  categories: Category[] = [];\n  categoryToEdit?: Category\n\n  constructor (private categoryService: CategoryService){}\n\n  ngOnInit() : void {\n    this.categoryService.getCategory().subscribe((result: Category[]) => (this.categories = result));\n  }\n\n  updateCategoryList(categories: Category[]){\n    this.categories = categories;\n  }\n\n  initNewCategory(){\n    this.categoryToEdit = new Category();\n  }\n\n  editCategory(category:Category){\n    this.categoryToEdit = category;\n  }\n}\n","<button (click)=\"initNewCategory()\">Yeni Kategori</button>\n<table>\n  <thead>\n    <th>Kategori Adı</th>\n    <th></th>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let category of categories\">\n      <td>{{category.name}}</td>\n      <td><button (click)=\"editCategory(category)\">Düzenle</button></td>\n    </tr>\n  </tbody>\n</table>\n\n<app-edit-category [category]=\"categoryToEdit\" (categoriesUpdated)=\"updateCategoryList($event)\"></app-edit-category>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}